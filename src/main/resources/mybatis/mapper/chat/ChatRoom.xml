<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spark.dating.chat.dao.ChatRoomDao">

<resultMap id="ChatRoomRequest" type="com.spark.dating.dto.chat.ChatRoomSelectRequest">
	<id column="CR_NO" property="crNo" />
	<result column="CR_NAME"  property="crName"/>
	<result column="CR_AGE"  property="crAge"/>
	<result column="CR_LASTMESSAGE"  property="crLastMessage"/>
	<result column="CR_LASTMESSAGEDATE"  property="crLastMessageDate"/>
</resultMap>

<insert id="createChatRoom" parameterType="com.spark.dating.dto.chat.ChatRoomCreateRequest" >
	<selectKey keyProperty="chatRoomNo" keyColumn="CR_NO" resultType="int" order="BEFORE">
		select SEQ_CHATROOM_NO.NEXTVAL FROM DUAL
	</selectKey>
	INSERT INTO CHATROOM (CR_NO, CR_UUID)
		VALUES (#{chatRoomNo}, HEXTORAW(#{chatRoomUUID}))
</insert>

<insert id="insertMatchingRoomMapping" parameterType="com.spark.dating.dto.chat.MatchingRoomMapping">
	INSERT INTO MATCHINGCHATROOMMAPPING 
		VALUES (SEQ_MATCHINGROOMMAPPING_NO.NEXTVAL, #{mcMatchingNo}, #{mcChatRoomNo})
</insert>

<select id="existsMatchingNo" parameterType="long" resultType="int">
    SELECT CASE 
             WHEN EXISTS (
               SELECT 1
               FROM MATCHING M
               WHERE M.MT_NO = #{matchingNo}
             )
             THEN 1 ELSE 0
           END
    FROM DUAL
</select>

<select id="isValidMatchingUser" parameterType="com.spark.dating.dto.chat.ChatRoomCreateRequest" resultType="int">
    SELECT CASE 
             WHEN EXISTS (
               SELECT 1
               FROM MATCHING M
               JOIN HEARTS H ON M.MT_HEARTSNO = H.H_NO
               WHERE M.MT_NO = 2
                 AND (H.H_SENDUSER = 1 OR H.H_RECEIVEUSER = 1)
             )
             THEN 1 ELSE 0 
           END AS
    FROM DUAL
</select>

<select id="selectAllChatRoom" parameterType="int" resultType="ChatRoom">
	SELECT
        CR.CR_UUID as cr_UUID,
        M.M_NAME as cr_Name,
        CM.CM_MSG as cr_Message,
        M.M_AGE as cr_Age,
        CM.CM_DATE as cr_Date
    FROM CHATROOM CR
    JOIN MATCHINGCHATROOMMAPPING MC
         ON CR.CR_NO = MC.MC_CHATROOMNO
    JOIN MATCHING MT
         ON MC.MC_MATCHINGNO = MT.MT_NO
    JOIN HEARTS H
         ON MT.MT_HEARTSNO = H.H_NO
    JOIN MEMBER M
         ON M.M_NO = CASE
                        WHEN H.H_SENDUSER = #{memberNo}
                        THEN H.H_RECEIVEUSER
                        ELSE H.H_SENDUSER
                     END
    LEFT JOIN CHATMESSAGE CM
         ON CR.CR_LASTMESSAGENO = CM.CM_NO
    WHERE #{memberNo} IN (H.H_SENDUSER, H.H_RECEIVEUSER)
    ORDER BY CM.CM_DATE DESC NULLS LAST
</select>

<select id="selectAllChatRoomUUID" parameterType="String" resultType="java.util.UUID">
	SELECT
        CR.CR_UUID as cr_UUID
    FROM CHATROOM CR
    JOIN MATCHINGCHATROOMMAPPING MC
         ON CR.CR_NO = MC.MC_CHATROOMNO
    JOIN MATCHING MT
         ON MC.MC_MATCHINGNO = MT.MT_NO
    JOIN HEARTS H
         ON MT.MT_HEARTSNO = H.H_NO
    JOIN MEMBER M
         ON M.M_NO = CASE
                        WHEN H.H_SENDUSER = #{memberNo}
                        THEN H.H_RECEIVEUSER
                        ELSE H.H_SENDUSER
                     END
    LEFT JOIN CHATMESSAGE CM
         ON CR.CR_LASTMESSAGENO = CM.CM_NO
    WHERE #{memberNo} IN (H.H_SENDUSER, H.H_RECEIVEUSER)
    ORDER BY CM.CM_DATE DESC NULLS LAST
</select>

<select id="existsChatroomByMemberNoAndUuid" parameterType="hashmap" resultType="int">
	SELECT CASE 
	         WHEN EXISTS (
	            SELECT 1
	            FROM CHATROOM CR
	            JOIN MATCHINGCHATROOMMAPPING MC
	              ON CR.CR_NO = MC.MC_CHATROOMNO
	            JOIN MATCHING MT
	              ON MC.MC_MATCHINGNO = MT.MT_NO
	            JOIN HEARTS H
	              ON MT.MT_HEARTSNO = H.H_NO
	            WHERE CR.CR_UUID = #{roomUUID}
	              AND #{memberNo} IN (H.H_SENDUSER, H.H_RECEIVEUSER)
	         )
	         THEN 1
	         ELSE 0
	       END AS is_valid
	FROM dual
</select>

<select id="findChatRoomIdByUuid" parameterType="String" resultType="Long">
	SELECT CR_NO
	FROM CHATROOM
	WHERE CR_UUID = #{chatRoomUUID}
</select>

</mapper>